local EXELib = {}

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

function EXELib:CreateWindow(title)
    local player = Players.LocalPlayer
    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "EXE_UI"
    gui.ResetOnSpawn = false

    local main = Instance.new("Frame", gui)
    main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    main.Size = UDim2.new(0, 600, 0, 400)
    main.Position = UDim2.new(0.5, -300, 0.5, -200)
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.BorderSizePixel = 0
    main.Name = "MainFrame"

    local uicorner = Instance.new("UICorner", main)
    uicorner.CornerRadius = UDim.new(0, 8)

    local titleLabel = Instance.new("TextLabel", main)
    titleLabel.Text = title or "EXE v5 UI"
    titleLabel.Size = UDim2.new(1, 0, 0, 40)
    titleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.GothamBold
    Instance.new("UICorner", titleLabel).CornerRadius = UDim.new(0, 8)

    -- Drag handler
    local dragging, dragInput, dragStart, startPos

    titleLabel.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = main.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    titleLabel.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    local tabHolder = Instance.new("Frame", main)
    tabHolder.Name = "TabHolder"
    tabHolder.Position = UDim2.new(0, 0, 0, 40)
    tabHolder.Size = UDim2.new(0, 150, 1, -40)
    tabHolder.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Instance.new("UICorner", tabHolder).CornerRadius = UDim.new(0, 6)

    local container = Instance.new("Frame", main)
    container.Name = "Content"
    container.Position = UDim2.new(0, 150, 0, 40)
    container.Size = UDim2.new(1, -150, 1, -40)
    container.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Instance.new("UICorner", container).CornerRadius = UDim.new(0, 6)

    local tabList = {}

    function tabList:AddTab(name)
        local button = Instance.new("TextButton", tabHolder)
        button.Text = name
        button.Size = UDim2.new(1, 0, 0, 40)
        button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        button.TextColor3 = Color3.new(1, 1, 1)
        button.Font = Enum.Font.Gotham
        button.TextScaled = true
        Instance.new("UICorner", button).CornerRadius = UDim.new(0, 6)

        local page = Instance.new("Frame", container)
        page.Size = UDim2.new(1, 0, 1, 0)
        page.BackgroundTransparency = 1
        page.Visible = false

        button.MouseButton1Click:Connect(function()
            for _, child in pairs(container:GetChildren()) do
                if child:IsA("Frame") then child.Visible = false end
            end
            page.Visible = true
        end)

        return {
            Page = page,
            AddLabel = function(_, txt)
                local label = Instance.new("TextLabel", page)
                label.Text = txt
                label.Size = UDim2.new(1, 0, 0, 30)
                label.TextColor3 = Color3.new(1, 1, 1)
                label.BackgroundTransparency = 1
                label.Font = Enum.Font.Gotham
                label.TextScaled = true
                return label
            end
        }
    end

    return tabList
end

return EXELib