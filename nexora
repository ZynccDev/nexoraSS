-- NexoraUI.lua
local Nexora = {}
Nexora.__index = Nexora

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local Themes = {
	Dark = {
		Background = Color3.fromRGB(30, 30, 30),
		Text = Color3.fromRGB(255, 255, 255),
		Accent = Color3.fromRGB(80, 120, 255),
		Tab = Color3.fromRGB(40, 40, 45)
	},
	Light = {
		Background = Color3.fromRGB(245, 245, 245),
		Text = Color3.fromRGB(20, 20, 20),
		Accent = Color3.fromRGB(120, 90, 255),
		Tab = Color3.fromRGB(230, 230, 230)
	}
}

local function roundify(inst, radius)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, radius or 8)
	corner.Parent = inst
end

function Nexora:CreateWindow(title, opts)
	opts = opts or {}
	local theme = Themes[opts.Theme or "Dark"]
	local layout = opts.Layout or "Thin"

	local player = Players.LocalPlayer
	local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	gui.Name = "NexoraUI"
	gui.IgnoreGuiInset = true
	gui.ResetOnSpawn = false

	local main = Instance.new("Frame", gui)
	main.AnchorPoint = Vector2.new(0.5, 0.5)
	main.Position = UDim2.new(0.5, 0, 0.5, 0)
	main.Size = UDim2.new(0, 600, 0, 400)
	main.BackgroundColor3 = theme.Background
	main.BorderSizePixel = 0
	roundify(main, 12)

	local tabsHolder = Instance.new("Frame", main)
	tabsHolder.Size = UDim2.new(1, 0, 0, 50)
	tabsHolder.BackgroundColor3 = theme.Tab
	roundify(tabsHolder, 12)

	local tabLayout = Instance.new("UIListLayout", tabsHolder)
	tabLayout.FillDirection = Enum.FillDirection.Horizontal
	tabLayout.Padding = UDim.new(0, 4)

	local content = Instance.new("Frame", main)
	content.Position = UDim2.new(0, 0, 0, 50)
	content.Size = UDim2.new(1, 0, 1, -50)
	content.BackgroundTransparency = 1

	local tabs = {}

	local function switchTab(tabName)
		for name, tab in pairs(tabs) do
			tab.Page.Visible = (name == tabName)
			TweenService:Create(tab.Button, TweenInfo.new(0.2), {
				BackgroundColor3 = name == tabName and theme.Accent or theme.Tab
			}):Play()
		end
	end

	local win = {}

	function win:AddTab(name)
		local button = Instance.new("TextButton", tabsHolder)
		button.Size = UDim2.new(0, 100, 1, 0)
		button.Text = name
		button.BackgroundColor3 = theme.Tab
		button.TextColor3 = theme.Text
		button.BorderSizePixel = 0
		button.AutoButtonColor = false
		roundify(button, 8)

		local page = Instance.new("ScrollingFrame", content)
		page.Size = UDim2.new(1, 0, 1, 0)
		page.BackgroundTransparency = 1
		page.Visible = false
		page.AutomaticCanvasSize = Enum.AutomaticSize.Y
		page.CanvasSize = UDim2.new(0, 0, 0, 0)
		page.ScrollBarThickness = 4

		local layout = Instance.new("UIListLayout", page)
		layout.Padding = UDim.new(0, 10)
		layout.SortOrder = Enum.SortOrder.LayoutOrder

		tabs[name] = { Button = button, Page = page }

		button.MouseButton1Click:Connect(function()
			switchTab(name)
		end)

		if not next(tabs, next(tabs)) then
			switchTab(name)
		end

		local tab = {}

		function tab:AddInput(cfg)
			local box = Instance.new("TextBox", page)
			box.Size = UDim2.new(1, -20, 0, 40)
			box.PlaceholderText = cfg.Placeholder or ""
			box.Text = ""
			box.BackgroundColor3 = theme.Background
			box.TextColor3 = theme.Text
			box.ClearTextOnFocus = false
			box.TextSize = 16
			box.BorderSizePixel = 0
			box.PlaceholderColor3 = theme.Text:lerp(Color3.new(0, 0, 0), 0.5)
			roundify(box, 6)
			box.FocusLost:Connect(function()
				if cfg.Callback then
					cfg.Callback(box.Text)
				end
			end)
		end

		function tab:AddButton(cfg)
			local btn = Instance.new("TextButton", page)
			btn.Size = UDim2.new(1, -20, 0, 40)
			btn.Text = cfg.Name or "Button"
			btn.BackgroundColor3 = theme.Accent
			btn.TextColor3 = Color3.new(1, 1, 1)
			btn.BorderSizePixel = 0
			roundify(btn, 6)
			btn.MouseButton1Click:Connect(function()
				if cfg.Callback then
					cfg.Callback()
				end
			end)
		end

		function tab:AddCodeEditor(cfg)
			local editor = Instance.new("TextBox", page)
			editor.MultiLine = true
			editor.Size = UDim2.new(1, -20, 0, 150)
			editor.TextXAlignment = Enum.TextXAlignment.Left
			editor.TextYAlignment = Enum.TextYAlignment.Top
			editor.TextWrapped = true
			editor.TextEditable = true
			editor.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
			editor.TextColor3 = Color3.new(1, 1, 1)
			editor.ClearTextOnFocus = false
			editor.Font = Enum.Font.Code
			editor.TextSize = 15
			editor.Text = "-- Your code here"
			editor.BorderSizePixel = 0
			roundify(editor, 6)
			editor.FocusLost:Connect(function()
				if cfg.Callback then
					cfg.Callback(editor.Text)
				end
			end)
		end

		return tab
	end

	function Nexora:SetTheme(themeNameOrTable)
		if typeof(themeNameOrTable) == "string" and Themes[themeNameOrTable] then
			theme = Themes[themeNameOrTable]
		elseif typeof(themeNameOrTable) == "table" then
			theme = themeNameOrTable
		end
	end

	return win
end

return Nexora