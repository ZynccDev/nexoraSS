local TweenService = game:GetService(“TweenService”)
local UserInputService = game:GetService(“UserInputService”)
local RunService = game:GetService(“RunService”)
local Players = game:GetService(“Players”)

local GlassUI = {}
GlassUI.__index = GlassUI

– Configuration
local CONFIG = {
BACKGROUND_IMAGE = “rbxassetid://16255699706”,
ANIMATION_SPEED = 0.3,
BLUR_SIZE = 24,
CORNER_RADIUS = 12,
GLASS_TRANSPARENCY = 0.15,
SHADOW_TRANSPARENCY = 0.3,
ACCENT_COLOR = Color3.fromRGB(138, 180, 248),
PRIMARY_COLOR = Color3.fromRGB(255, 255, 255),
SECONDARY_COLOR = Color3.fromRGB(156, 163, 175),
DARK_COLOR = Color3.fromRGB(17, 24, 39),
SUCCESS_COLOR = Color3.fromRGB(34, 197, 94),
WARNING_COLOR = Color3.fromRGB(251, 191, 36),
ERROR_COLOR = Color3.fromRGB(239, 68, 68)
}

– Utility Functions
local function createTween(object, properties, duration, easingStyle, easingDirection)
local tweenInfo = TweenInfo.new(
duration or CONFIG.ANIMATION_SPEED,
easingStyle or Enum.EasingStyle.Quart,
easingDirection or Enum.EasingDirection.Out
)
return TweenService:Create(object, tweenInfo, properties)
end

local function addCorner(parent, radius)
local corner = Instance.new(“UICorner”)
corner.CornerRadius = UDim.new(0, radius or CONFIG.CORNER_RADIUS)
corner.Parent = parent
return corner
end

local function addGradient(parent, colors, rotation)
local gradient = Instance.new(“UIGradient”)
gradient.Color = ColorSequence.new(colors)
gradient.Rotation = rotation or 0
gradient.Parent = parent
return gradient
end

local function addShadow(parent)
local shadow = Instance.new(“ImageLabel”)
shadow.Name = “Shadow”
shadow.Size = UDim2.new(1, 20, 1, 20)
shadow.Position = UDim2.new(0, -10, 0, -10)
shadow.BackgroundTransparency = 1
shadow.Image = “rbxasset://textures/ui/GuiImagePlaceholder.png”
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = CONFIG.SHADOW_TRANSPARENCY
shadow.ZIndex = parent.ZIndex - 1
shadow.Parent = parent.Parent
addCorner(shadow, CONFIG.CORNER_RADIUS + 2)
return shadow
end

– Main GlassUI Class
function GlassUI.new()
local self = setmetatable({}, GlassUI)
self.screenGui = nil
self.components = {}
self.isFullscreen = false
self:init()
return self
end

function GlassUI:init()
– Create main ScreenGui
self.screenGui = Instance.new(“ScreenGui”)
self.screenGui.Name = “GlassUI”
self.screenGui.ResetOnSpawn = false
self.screenGui.Parent = Players.LocalPlayer:WaitForChild(“PlayerGui”)

```
-- Create background
self:createBackground()

-- Setup fullscreen detection
self:setupFullscreenDetection()
```

end

function GlassUI:createBackground()
local background = Instance.new(“ImageLabel”)
background.Name = “Background”
background.Size = UDim2.new(1, 0, 1, 0)
background.Position = UDim2.new(0, 0, 0, 0)
background.Image = CONFIG.BACKGROUND_IMAGE
background.ScaleType = Enum.ScaleType.Crop
background.BackgroundTransparency = 1
background.Parent = self.screenGui

```
-- Add blur effect (initially disabled)
local blur = Instance.new("BlurEffect")
blur.Name = "BackgroundBlur"
blur.Size = 0
blur.Parent = game.Lighting

self.backgroundBlur = blur
self.background = background
```

end

function GlassUI:setupFullscreenDetection()
UserInputService.WindowFocused:Connect(function()
if UserInputService:IsKeyDown(Enum.KeyCode.F11) or
game.Workspace.CurrentCamera.ViewportSize.Y >= 1000 then
self:setFullscreen(true)
end
end)

```
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.F11 then
        self:toggleFullscreen()
    end
end)
```

end

function GlassUI:setFullscreen(isFullscreen)
self.isFullscreen = isFullscreen
local targetBlur = isFullscreen and CONFIG.BLUR_SIZE or 0

```
createTween(self.backgroundBlur, {Size = targetBlur}, 0.5):Play()
```

end

function GlassUI:toggleFullscreen()
self:setFullscreen(not self.isFullscreen)
end

– Glass Panel Component
function GlassUI:createPanel(properties)
properties = properties or {}

```
local panel = Instance.new("Frame")
panel.Name = properties.Name or "GlassPanel"
panel.Size = properties.Size or UDim2.new(0, 400, 0, 300)
panel.Position = properties.Position or UDim2.new(0.5, -200, 0.5, -150)
panel.BackgroundColor3 = properties.BackgroundColor3 or CONFIG.PRIMARY_COLOR
panel.BackgroundTransparency = CONFIG.GLASS_TRANSPARENCY
panel.BorderSizePixel = 0
panel.ZIndex = properties.ZIndex or 2
panel.Parent = properties.Parent or self.screenGui

-- Add glass effect
addCorner(panel)
local shadow = addShadow(panel)

-- Add subtle gradient for depth
addGradient(panel, {
    Color3.fromRGB(255, 255, 255),
    Color3.fromRGB(245, 245, 245)
}, 45)

-- Add border glow
local border = Instance.new("UIStroke")
border.Color = CONFIG.ACCENT_COLOR
border.Thickness = 1
border.Transparency = 0.7
border.Parent = panel

table.insert(self.components, {type = "panel", element = panel, shadow = shadow})
return panel
```

end

– Button Component
function GlassUI:createButton(properties)
properties = properties or {}

```
local button = Instance.new("TextButton")
button.Name = properties.Name or "GlassButton"
button.Size = properties.Size or UDim2.new(0, 120, 0, 40)
button.Position = properties.Position or UDim2.new(0, 0, 0, 0)
button.BackgroundColor3 = properties.BackgroundColor3 or CONFIG.ACCENT_COLOR
button.BackgroundTransparency = 0.2
button.BorderSizePixel = 0
button.Text = properties.Text or "Button"
button.TextColor3 = properties.TextColor3 or CONFIG.PRIMARY_COLOR
button.TextSize = properties.TextSize or 14
button.Font = properties.Font or Enum.Font.GothamMedium
button.ZIndex = properties.ZIndex or 3
button.Parent = properties.Parent or self.screenGui

addCorner(button, 8)

-- Add hover effects
local originalTransparency = button.BackgroundTransparency
local hoverTween, leaveTween

button.MouseEnter:Connect(function()
    if hoverTween then hoverTween:Cancel() end
    hoverTween = createTween(button, {
        BackgroundTransparency = originalTransparency - 0.1,
        Size = button.Size + UDim2.new(0, 4, 0, 2)
    }, 0.2)
    hoverTween:Play()
end)

button.MouseLeave:Connect(function()
    if leaveTween then leaveTween:Cancel() end
    leaveTween = createTween(button, {
        BackgroundTransparency = originalTransparency,
        Size = properties.Size or UDim2.new(0, 120, 0, 40)
    }, 0.2)
    leaveTween:Play()
end)

-- Click animation
button.MouseButton1Down:Connect(function()
    createTween(button, {Size = button.Size - UDim2.new(0, 2, 0, 1)}, 0.1):Play()
end)

button.MouseButton1Up:Connect(function()
    createTween(button, {Size = properties.Size or UDim2.new(0, 120, 0, 40)}, 0.1):Play()
end)

table.insert(self.components, {type = "button", element = button})
return button
```

end

– Input Field Component
function GlassUI:createInput(properties)
properties = properties or {}

```
local inputFrame = Instance.new("Frame")
inputFrame.Name = properties.Name or "GlassInput"
inputFrame.Size = properties.Size or UDim2.new(0, 200, 0, 35)
inputFrame.Position = properties.Position or UDim2.new(0, 0, 0, 0)
inputFrame.BackgroundColor3 = CONFIG.PRIMARY_COLOR
inputFrame.BackgroundTransparency = 0.1
inputFrame.BorderSizePixel = 0
inputFrame.ZIndex = properties.ZIndex or 3
inputFrame.Parent = properties.Parent or self.screenGui

addCorner(inputFrame, 6)

local input = Instance.new("TextBox")
input.Name = "Input"
input.Size = UDim2.new(1, -16, 1, 0)
input.Position = UDim2.new(0, 8, 0, 0)
input.BackgroundTransparency = 1
input.Text = ""
input.PlaceholderText = properties.PlaceholderText or "Enter text..."
input.TextColor3 = CONFIG.DARK_COLOR
input.PlaceholderColor3 = CONFIG.SECONDARY_COLOR
input.TextSize = properties.TextSize or 14
input.Font = properties.Font or Enum.Font.Gotham
input.TextXAlignment = Enum.TextXAlignment.Left
input.ZIndex = 4
input.Parent = inputFrame

-- Add focus effects
local border = Instance.new("UIStroke")
border.Color = CONFIG.SECONDARY_COLOR
border.Thickness = 1
border.Transparency = 0.5
border.Parent = inputFrame

input.Focused:Connect(function()
    createTween(border, {
        Color = CONFIG.ACCENT_COLOR,
        Transparency = 0
    }, 0.2):Play()
end)

input.FocusLost:Connect(function()
    createTween(border, {
        Color = CONFIG.SECONDARY_COLOR,
        Transparency = 0.5
    }, 0.2):Play()
end)

table.insert(self.components, {type = "input", element = inputFrame, textbox = input})
return inputFrame, input
```

end

– Label Component
function GlassUI:createLabel(properties)
properties = properties or {}

```
local label = Instance.new("TextLabel")
label.Name = properties.Name or "GlassLabel"
label.Size = properties.Size or UDim2.new(0, 200, 0, 30)
label.Position = properties.Position or UDim2.new(0, 0, 0, 0)
label.BackgroundTransparency = 1
label.Text = properties.Text or "Label"
label.TextColor3 = properties.TextColor3 or CONFIG.DARK_COLOR
label.TextSize = properties.TextSize or 16
label.Font = properties.Font or Enum.Font.GothamMedium
label.TextXAlignment = properties.TextXAlignment or Enum.TextXAlignment.Left
label.ZIndex = properties.ZIndex or 3
label.Parent = properties.Parent or self.screenGui

table.insert(self.components, {type = "label", element = label})
return label
```

end

– Modal Component
function GlassUI:createModal(properties)
properties = properties or {}

```
-- Create overlay
local overlay = Instance.new("Frame")
overlay.Name = "ModalOverlay"
overlay.Size = UDim2.new(1, 0, 1, 0)
overlay.Position = UDim2.new(0, 0, 0, 0)
overlay.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
overlay.BackgroundTransparency = 1
overlay.ZIndex = 10
overlay.Parent = self.screenGui

-- Create modal panel
local modal = self:createPanel({
    Name = properties.Name or "Modal",
    Size = properties.Size or UDim2.new(0, 500, 0, 400),
    Position = UDim2.new(0.5, -250, 0.5, -200),
    Parent = overlay,
    ZIndex = 11
})

-- Animate in
overlay.BackgroundTransparency = 1
modal.Size = UDim2.new(0, 0, 0, 0)
modal.Position = UDim2.new(0.5, 0, 0.5, 0)

createTween(overlay, {BackgroundTransparency = 0.4}, 0.3):Play()
createTween(modal, {
    Size = properties.Size or UDim2.new(0, 500, 0, 400),
    Position = UDim2.new(0.5, -250, 0.5, -200)
}, 0.4, Enum.EasingStyle.Back):Play()

-- Close function
local function closeModal()
    createTween(overlay, {BackgroundTransparency = 1}, 0.2):Play()
    createTween(modal, {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    }, 0.3):Play()
    
    wait(0.3)
    overlay:Destroy()
end

-- Click outside to close
overlay.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        closeModal()
    end
end)

table.insert(self.components, {type = "modal", element = overlay, panel = modal, close = closeModal})
return modal, closeModal
```

end

– Notification System
function GlassUI:showNotification(properties)
properties = properties or {}

```
local notification = Instance.new("Frame")
notification.Name = "Notification"
notification.Size = UDim2.new(0, 300, 0, 60)
notification.Position = UDim2.new(1, -320, 0, 20)
notification.BackgroundColor3 = properties.BackgroundColor3 or CONFIG.PRIMARY_COLOR
notification.BackgroundTransparency = 0.1
notification.BorderSizePixel = 0
notification.ZIndex = 20
notification.Parent = self.screenGui

addCorner(notification)
addShadow(notification)

-- Add colored accent bar
local accent = Instance.new("Frame")
accent.Name = "Accent"
accent.Size = UDim2.new(0, 4, 1, 0)
accent.Position = UDim2.new(0, 0, 0, 0)
accent.BackgroundColor3 = properties.AccentColor or CONFIG.ACCENT_COLOR
accent.BorderSizePixel = 0
accent.ZIndex = 21
accent.Parent = notification

addCorner(accent, 2)

-- Add text
local label = Instance.new("TextLabel")
label.Name = "Text"
label.Size = UDim2.new(1, -20, 1, 0)
label.Position = UDim2.new(0, 16, 0, 0)
label.BackgroundTransparency = 1
label.Text = properties.Text or "Notification"
label.TextColor3 = CONFIG.DARK_COLOR
label.TextSize = 14
label.Font = Enum.Font.Gotham
label.TextXAlignment = Enum.TextXAlignment.Left
label.TextWrapped = true
label.ZIndex = 22
label.Parent = notification

-- Animate in
notification.Position = UDim2.new(1, 0, 0, 20)
createTween(notification, {Position = UDim2.new(1, -320, 0, 20)}, 0.4):Play()

-- Auto dismiss after duration
local duration = properties.Duration or 3
wait(duration)

createTween(notification, {Position = UDim2.new(1, 0, 0, 20)}, 0.3):Play()
wait(0.3)
notification:Destroy()
```

end

– Utility Methods
function GlassUI:setTheme(theme)
if theme == “dark” then
CONFIG.PRIMARY_COLOR = Color3.fromRGB(31, 41, 55)
CONFIG.SECONDARY_COLOR = Color3.fromRGB(75, 85, 99)
CONFIG.DARK_COLOR = Color3.fromRGB(243, 244, 246)
elseif theme == “light” then
CONFIG.PRIMARY_COLOR = Color3.fromRGB(255, 255, 255)
CONFIG.SECONDARY_COLOR = Color3.fromRGB(156, 163, 175)
CONFIG.DARK_COLOR = Color3.fromRGB(17, 24, 39)
end
end

function GlassUI:destroy()
if self.backgroundBlur then
self.backgroundBlur:Destroy()
end
if self.screenGui then
self.screenGui:Destroy()
end
end

return GlassUI