local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

local GlassUI = {}
GlassUI.__index = GlassUI

local CONFIG = {
	BACKGROUND_IMAGE = "rbxassetid://16255699706",
	ANIMATION_SPEED = 0.3,
	BLUR_SIZE = 24,
	CORNER_RADIUS = 12,
	GLASS_TRANSPARENCY = 0.15,
	ACCENT_COLOR = Color3.fromRGB(138, 180, 248),
	PRIMARY_COLOR = Color3.fromRGB(255, 255, 255),
	DARK_COLOR = Color3.fromRGB(17, 24, 39),
	SECONDARY_COLOR = Color3.fromRGB(156, 163, 175),
}

-- Tween helper
local function createTween(object, properties, duration)
	local tweenInfo = TweenInfo.new(duration or CONFIG.ANIMATION_SPEED, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
	return TweenService:Create(object, tweenInfo, properties)
end

-- Corner helper
local function addCorner(parent, radius)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, radius or CONFIG.CORNER_RADIUS)
	corner.Parent = parent
	return corner
end

function GlassUI.new()
	local self = setmetatable({}, GlassUI)
	self.screenGui = nil
	self.backgroundBlur = nil
	self.isFullscreen = false
	self:init()
	return self
end

function GlassUI:init()
	self.screenGui = Instance.new("ScreenGui")
	self.screenGui.Name = "GlassUI"
	self.screenGui.ResetOnSpawn = false
	self.screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local success, err = pcall(function()
		self.screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
	end)

	if not success then
		warn("GlassUI: Failed to create ScreenGui - " .. tostring(err))
		return
	end

	self:createBackground()
	self:setupFullscreenDetection()
end

function GlassUI:createBackground()
	local background = Instance.new("ImageLabel")
	background.Name = "Background"
	background.Size = UDim2.new(1, 0, 1, 0)
	background.Position = UDim2.new(0, 0, 0, 0)
	background.Image = CONFIG.BACKGROUND_IMAGE
	background.ScaleType = Enum.ScaleType.Crop
	background.BackgroundTransparency = 1
	background.ZIndex = 1
	background.Parent = self.screenGui

	local success, err = pcall(function()
		local blur = Instance.new("BlurEffect")
		blur.Name = "GlassUIBlur"
		blur.Size = 0
		blur.Parent = game:GetService("Lighting")
		self.backgroundBlur = blur
	end)

	if not success then
		warn("GlassUI: Could not create blur effect - " .. tostring(err))
	end

	self.background = background
end

function GlassUI:setupFullscreenDetection()
	local success, err = pcall(function()
		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if gameProcessed then return end
			if input.KeyCode == Enum.KeyCode.F11 then
				self:toggleFullscreen()
			end
		end)
	end)

	if not success then
		warn("GlassUI: Could not setup fullscreen detection - " .. tostring(err))
	end
end

function GlassUI:setFullscreen(isFullscreen)
	if not self.backgroundBlur then return end
	self.isFullscreen = isFullscreen
	local targetBlur = isFullscreen and CONFIG.BLUR_SIZE or 0

	local success, err = pcall(function()
		createTween(self.backgroundBlur, {Size = targetBlur}, 0.5):Play()
	end)

	if not success then
		warn("GlassUI: Blur animation failed - " .. tostring(err))
	end
end

function GlassUI:toggleFullscreen()
	self:setFullscreen(not self.isFullscreen)
end

-- Shared Create Helper (Panel, Button, Input, Label, Modal...)
function GlassUI:createPanel(properties)
	properties = properties or {}
	if not self.screenGui then warn("GlassUI: ScreenGui not initialized") return nil end

	local panel = Instance.new("Frame")
	panel.Name = properties.Name or "GlassPanel"
	panel.Size = properties.Size or UDim2.new(0, 400, 0, 300)
	panel.Position = properties.Position or UDim2.new(0.5, -200, 0.5, -150)
	panel.BackgroundColor3 = properties.BackgroundColor3 or CONFIG.PRIMARY_COLOR
	panel.BackgroundTransparency = CONFIG.GLASS_TRANSPARENCY
	panel.BorderSizePixel = 0
	panel.ZIndex = properties.ZIndex or 10
	panel.Parent = properties.Parent or self.screenGui

	addCorner(panel)

	local border = Instance.new("UIStroke")
	border.Color = CONFIG.ACCENT_COLOR
	border.Thickness = 1
	border.Transparency = 0.7
	border.Parent = panel

	return panel
end

function GlassUI:createButton(properties)
	properties = properties or {}
	if not self.screenGui then warn("GlassUI: ScreenGui not initialized") return nil end

	local button = Instance.new("TextButton")
	button.Name = properties.Name or "GlassButton"
	button.Size = properties.Size or UDim2.new(0, 120, 0, 40)
	button.Position = properties.Position or UDim2.new(0, 0, 0, 0)
	button.BackgroundColor3 = properties.BackgroundColor3 or CONFIG.ACCENT_COLOR
	button.BackgroundTransparency = 0.2
	button.BorderSizePixel = 0
	button.Text = properties.Text or "Button"
	button.TextColor3 = properties.TextColor3 or CONFIG.PRIMARY_COLOR
	button.TextSize = properties.TextSize or 14
	button.Font = properties.Font or Enum.Font.GothamMedium
	button.ZIndex = properties.ZIndex or 11
	button.Parent = properties.Parent or self.screenGui

	addCorner(button, 8)

	local originalSize = button.Size
	local originalTransparency = button.BackgroundTransparency

	button.MouseEnter:Connect(function()
		createTween(button, {
			BackgroundTransparency = math.clamp(originalTransparency - 0.1, 0, 1),
			Size = originalSize + UDim2.new(0, 4, 0, 2)
		}, 0.2):Play()
	end)

	button.MouseLeave:Connect(function()
		createTween(button, {
			BackgroundTransparency = originalTransparency,
			Size = originalSize
		}, 0.2):Play()
	end)

	button.MouseButton1Down:Connect(function()
		createTween(button, {Size = originalSize - UDim2.new(0, 2, 0, 1)}, 0.1):Play()
	end)

	button.MouseButton1Up:Connect(function()
		createTween(button, {Size = originalSize}, 0.1):Play()
	end)

	return button
end